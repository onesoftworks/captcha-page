* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --primary_color: #1a237e;
    --success_color: #4CAF50;
    --error_color: #f44336;
    --background_color: #f0f2ff;
    --container_shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    --transition_timing: 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
    background: var(--background_color);
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 20px;
}

.container {
    background: white;
    width: 100%;
    max-width: 390px;
    border-radius: 40px;
    padding: 20px;
    box-shadow: var(--container_shadow);
    transform: translateY(0);
    transition: transform var(--transition_timing);
}

.container:hover {
    transform: translateY(-5px);
}

.status_bar {
    display: flex;
    justify-content: space-between;
    padding: 10px 20px;
    font-weight: 600;
}

.signal {
    display: flex;
    gap: 5px;
}

.wifi::before {
    content: "●●●●";
}

.battery::before {
    content: "";
    display: inline-block;
    width: 20px;
    height: 10px;
    border: 2px solid #000;
    border-radius: 3px;
    position: relative;
}

.battery::after {
    content: "";
    display: inline-block;
    width: 2px;
    height: 6px;
    background: #000;
    position: absolute;
    right: -4px;
    top: 50%;
    transform: translateY(-50%);
}

.content {
    padding: 20px;
    text-align: center;
}

.robot_icon {
    margin: 20px auto;
    width: 80px;
    height: 80px;
    background: var(--background_color);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    animation: float 3s ease-in-out infinite;
}

@keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
}

.robot_icon svg {
    fill: var(--primary_color);
}

.header_content {
    margin-bottom: 30px;
}

h1 {
    color: var(--primary_color);
    font-size: 24px;
    margin-bottom: 10px;
}

p {
    color: #666;
    margin-bottom: 20px;
}

.progress_container {
    width: 100%;
    height: 4px;
    background: #e0e0e0;
    border-radius: 2px;
    overflow: hidden;
    margin: 20px 0;
}

.progress_bar {
    width: 0;
    height: 100%;
    background: var(--primary_color);
    transition: width var(--transition_timing);
}

.progress_bar.complete {
    background: var(--success_color);
}

.grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 15px;
    margin-top: 30px;
}

.square {
    aspect-ratio: 1;
    border-radius: 15px;
    position: relative;
    cursor: pointer;
    transition: transform var(--transition_timing);
    overflow: hidden;
}

.square:hover {
    transform: scale(1.05);
}

.square.selected {
    animation: pulse 0.5s ease-out;
}

@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
}

.square.selected::after {
    content: "✓";
    position: absolute;
    top: 5px;
    right: 5px;
    background: var(--success_color);
    color: white;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    animation: checkmark 0.3s ease-out;
}

@keyframes checkmark {
    0% { transform: scale(0) rotate(-45deg); }
    100% { transform: scale(1) rotate(0); }
}

.yellow { background: #FFE082; }
.mint { background: #B2DFDB; }
.orange { background: #FFAB91; }
.blue { background: #90CAF9; }
.pink { background: #F8BBD0; }
.pale_yellow { background: #FFF59D; }
.orange_dark { background: #FFCC80; }
.purple { background: #B39DDB; }
.light_blue { background: #81D4FA; }

.monster {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    transition: transform var(--transition_timing);
}

.monster::before,
.monster::after {
    content: "";
    position: absolute;
}

.monster.happy::before {
    content: "◠◠";
    font-size: 24px;
    transform: rotate(90deg);
}

.monster.cyclops::before {
    content: "●";
    font-size: 24px;
}

.monster.angry::before {
    content: "◣◢";
    font-size: 24px;
}

.monster.glasses::before {
    content: "⊕⊕";
    font-size: 24px;
}

.monster.crown::before {
    content: "◕◕";
    font-size: 24px;
}

.monster.crown::after {
    content: "♛";
    top: 10px;
    font-size: 20px;
}

.monster.basic::before {
    content: "◉◉";
    font-size: 24px;
}

.monster.mustache::before {
    content: "◑◑";
    font-size: 24px;
}

.monster.mustache::after {
    content: "〰";
    bottom: 20px;
    font-size: 24px;
}

.monster.ghost::before {
    content: "⊙⊙";
    font-size: 24px;
}

.monster.cookie::before {
    content: "☉☉";
    font-size: 24px;
}

.number {
    position: absolute;
    top: 10px;
    left: 10px;
    background: rgba(255, 255, 255, 0.9);
    border-radius: 50%;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    color: var(--primary_color);
    font-size: 14px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.action_container {
    margin-top: 30px;
}

.submit_button {
    background: var(--primary_color);
    color: white;
    border: none;
    padding: 12px 30px;
    border-radius: 25px;
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    transition: all var(--transition_timing);
    transform: scale(1);
}

.submit_button:hover:not(:disabled) {
    transform: scale(1.05);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.submit_button:disabled {
    background: #ccc;
    cursor: not-allowed;
}

.result_message {
    margin-top: 15px;
    font-weight: 500;
    min-height: 24px;
}

.result_message.success {
    color: var(--success_color);
}

.result_message.error {
    color: var(--error_color);
}

.particles {
    position: fixed;
    top: 0;
    left: 0;
    pointer-events: none;
    z-index: 9999;
}

.particle {
    position: absolute;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    pointer-events: none;
} 